{"version":3,"sources":["components/input.js","helpers/validation.js","containers/contact.js"],"names":["Input","props","inputElement","inputClasses","blur","isValid","push","elementType","onBlur","onblur","id","label","className","join","config","value","onChange","onchange","name","disabled","required","rows","style","maxWidth","maxHeight","minHeight","minWidth","htmlFor","trim","fullname","test","email","number","Contact","useState","fullName","elementConfig","type","placeholder","validations","touched","errorMessage","company","message","contactForm","setContactForm","formArray","key","form","map","event","inputIdentifier","validation","target","updatedFormElement","updatedContactForm","inputChangeHandler","elementID","updatedForm","handleBlur","color","size","extraStyle"],"mappings":"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","file":"static/js/5.2df36114.chunk.js","sourcesContent":["const Input = (props) => {\r\n  let inputClasses = [\"form-input\"];\r\n  if (props.blur && !props.isValid) {\r\n    inputClasses.push(\"form-invalid\");\r\n  } else if (props.isValid && props.blur) {\r\n    inputClasses.push(\"form-valid\");\r\n  }\r\n  let inputElement;\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          onBlur={props.onblur}\r\n          id={props.label}\r\n          className={inputClasses.join(\" \")}\r\n          {...props.config}\r\n          value={props.value}\r\n          onChange={props.onchange}\r\n          name={props.label}\r\n          disabled={props.disabled}\r\n          required\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          onBlur={props.onblur}\r\n          id={props.label}\r\n          {...props.config}\r\n          value={props.value}\r\n          onChange={props.onchange}\r\n          name={props.label}\r\n          rows=\"4\"\r\n          className={inputClasses.join(\" \")}\r\n          required\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"135px\",\r\n            minHeight: \"135px\",\r\n            minWidth: \"100%\",\r\n          }}\r\n        ></textarea>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          onBlur={props.onblur}\r\n          id={props.label}\r\n          {...props.config}\r\n          value={props.value}\r\n          onChange={props.onchange}\r\n          name={props.label}\r\n          className=\"form-input\"\r\n          required\r\n        />\r\n      );\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label className=\"form-label\" htmlFor={props.label}>\r\n        {props.label}\r\n      </label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","export const required = (value) => {\r\n  return value.trim() !== \"\" && value.trim() !== null;\r\n};\r\n\r\nexport const fullname = (value) => {\r\n  const regex = /^[a-zA-Z]{4,}(?: [a-zA-Z]+){0,2}$/;\r\n  return regex.test(value);\r\n};\r\n\r\nexport const email = (value) => {\r\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return regex.test(value);\r\n};\r\n\r\nexport const number = (value) => {\r\n  const regex = /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/gm;\r\n  return regex.test(value);\r\n};\r\n","import { useState } from \"react\";\r\nimport { AiOutlineMail, AiOutlinePhone } from \"react-icons/ai\";\r\nimport { RiQuestionAnswerLine } from \"react-icons/ri\";\r\nimport { Button } from \"../components/button\";\r\nimport Input from \"../components/input\";\r\nimport Subtitle from \"../components/subtitle\";\r\nimport Text from \"../components/text\";\r\nimport TextHeader from \"../components/textHeader\";\r\nimport Title from \"../components/title\";\r\nimport { email, fullname, number, required } from \"../helpers/validation\";\r\n\r\nconst Contact = () => {\r\n  const [contactForm, setContactForm] = useState({\r\n    fullName: {\r\n      elementType: \"input\",\r\n      label: \"Your Name*\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"John Doe\",\r\n      },\r\n      validations: [fullname],\r\n      isValid: false,\r\n      touched: false,\r\n      value: \"\",\r\n      blur: false,\r\n\r\n      errorMessage: \"\",\r\n    },\r\n\r\n    email: {\r\n      elementType: \"input\",\r\n      label: \"Email Address*\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"johndoe@example.com\",\r\n      },\r\n      validations: [email],\r\n      value: \"\",\r\n      isValid: false,\r\n      touched: false,\r\n      blur: false,\r\n      errorMessage: \"\",\r\n    },\r\n\r\n    company: {\r\n      elementType: \"input\",\r\n      label: \"Company Name*\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Company's name\",\r\n      },\r\n      validations: [required],\r\n      isValid: false,\r\n      value: \"\",\r\n      touched: false,\r\n      blur: false,\r\n\r\n      errorMessage: \"\",\r\n    },\r\n    number: {\r\n      elementType: \"input\",\r\n      label: \"Your Phone Number\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Phone Number\",\r\n      },\r\n      validations: [number],\r\n      isValid: false,\r\n      value: \"\",\r\n      touched: false,\r\n      blur: false,\r\n\r\n      errorMessage: \"\",\r\n    },\r\n    message: {\r\n      elementType: \"textarea\",\r\n      label: \"Your Message*\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Lets hear you out\",\r\n      },\r\n      value: \"\",\r\n      isValid: false,\r\n      touched: false,\r\n      validations: [required],\r\n      errorMessage: \"\",\r\n    },\r\n  });\r\n\r\n  const inputChangeHandler = (event, inputIdentifier) => {\r\n    let isValid = true;\r\n    for (let validation of contactForm[inputIdentifier].validations) {\r\n      isValid = validation(event.target.value) && isValid;\r\n    }\r\n    const updatedFormElement = {\r\n      ...contactForm[inputIdentifier],\r\n      value: event.target.value,\r\n      isValid: isValid,\r\n    };\r\n    const updatedContactForm = {\r\n      ...contactForm,\r\n      [inputIdentifier]: updatedFormElement,\r\n    };\r\n\r\n    setContactForm(updatedContactForm);\r\n  };\r\n\r\n  const handleBlur = (elementID) => {\r\n    const updatedFormElement = {\r\n      ...contactForm[elementID],\r\n      blur: true,\r\n    };\r\n\r\n    const updatedForm = {\r\n      ...contactForm,\r\n      [elementID]: updatedFormElement,\r\n    };\r\n    setContactForm(updatedForm);\r\n  };\r\n\r\n  let formArray = [];\r\n  for (let key in contactForm) {\r\n    formArray.push({\r\n      id: key,\r\n      config: contactForm[key],\r\n    });\r\n  }\r\n  let form = formArray.map((form) => (\r\n    <Input\r\n      key={form.id}\r\n      config={form.config.elementConfig}\r\n      onchange={(event) => inputChangeHandler(event, form.id)}\r\n      value={form.config.value}\r\n      elementType={form.config.elementType}\r\n      isValid={form.config.isValid}\r\n      touched={form.config.touched}\r\n      message={form.config.errorMessage}\r\n      blur={form.config.blur}\r\n      onblur={() => handleBlur(form.id)}\r\n      //   formIsValid={formValid}\r\n      //   clicked={clicked}\r\n      label={form.config.label}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"contact\">\r\n      <div className=\"contact-container\">\r\n        <div className=\"backgroundColor\">\r\n          <div className=\"container\">\r\n            <div className=\"mb-sm\">\r\n              <TextHeader>Contact Us</TextHeader>\r\n            </div>\r\n            <Text color=\"sm-text-white contact-header-text\">\r\n              We bring the results while helping you achieve cost and time\r\n              savings without taking on risk or management overhead\r\n            </Text>\r\n          </div>\r\n        </div>\r\n        <div className=\"contact-main\">\r\n          <section className=\"contact-main-form\">\r\n            <form className=\"form\">\r\n              <div className=\"form-container\">{form}</div>\r\n              <Text color=\"sm-text-light mb-sm\">\r\n                By submitting this form you agree to our Terms and Conditions\r\n                and out Privacy Policy which explains how we may collecct, use\r\n                and disclose your personal information including to third\r\n                parties.\r\n              </Text>\r\n              <Button color=\"button-purple\">Contact Sales</Button>\r\n            </form>\r\n          </section>\r\n          <section className=\"contact-main-support mt-sm\">\r\n            <div className=\"container\">\r\n              <div className=\"contact-main-support-container \">\r\n                <div className=\"contact-main-support-box\">\r\n                  <div className=\"contact-main-support-box-img\">\r\n                    <AiOutlineMail size=\"32px\" color=\"#ffffff\" />\r\n                  </div>\r\n                  <Subtitle extraStyle=\"mb-sm\">Email Us</Subtitle>\r\n                  <Text color=\"sm-text-light mb-sm\">\r\n                    Check out helpful resources, FAQs and developer tools.\r\n                  </Text>\r\n                  <Title>hello@helpcenter.com</Title>\r\n                </div>\r\n                <div className=\"contact-main-support-box\">\r\n                  <div className=\"contact-main-support-box-img\">\r\n                    <AiOutlinePhone size=\"32px\" color=\"#ffffff\" />\r\n                  </div>\r\n                  <Subtitle extraStyle=\"mb-sm\">Call Us</Subtitle>\r\n                  <Text color=\"sm-text-light mb-sm\">\r\n                    Check out helpful resources, FAQs and developer tools.\r\n                  </Text>\r\n                  <Title>+1 (646) 786 - 5060</Title>\r\n                </div>\r\n                <div className=\"contact-main-support-box\">\r\n                  <div className=\"contact-main-support-box-img\">\r\n                    <RiQuestionAnswerLine size=\"32px\" color=\"#ffffff\" />\r\n                  </div>\r\n                  <Subtitle extraStyle=\"mb-sm\">Support </Subtitle>\r\n                  <Text color=\"sm-text-light mb-sm\">\r\n                    Check out helpful resources, FAQs and developer tools.\r\n                  </Text>\r\n                  <Button\r\n                    color=\"button-purple\"\r\n                    extraStyle=\"contact-main-support-button\"\r\n                  >\r\n                    Support Center\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}